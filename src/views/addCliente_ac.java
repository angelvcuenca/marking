/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import models.*;
import static views.PlanAcumulativo.*;
//import views.CuentasCobrar*;

/**
 *
 * @author Desarrollo
 */
public class addCliente_ac extends javax.swing.JInternalFrame {

    /**
     * Creates new form addCliente
     */
    conexion_bd con = new conexion_bd();
    DefaultTableModel modeloTabla = new DefaultTableModel();

    DefaultTableModel modeloTabla_cxc = new DefaultTableModel();

    private TableRowSorter trsFiltro;

    public addCliente_ac() {
        initComponents();
        modeloTabla.addColumn("Nro.Ced");
        modeloTabla.addColumn("Nombres");
        modeloTabla.addColumn("Apellidos");
        modeloTabla.addColumn("Celular");
        modeloTabla.addColumn("Tfno. Casa");
        modeloTabla.addColumn("E-mail");
        modeloTabla.addColumn("Dir.Casa");
        modeloTabla.addColumn("Nro.Casa");
        modeloTabla.addColumn("Tfno. Trabajp");
        modeloTabla.addColumn("Dir. Trabajo");
        modeloTabla.addColumn("Estado");

        modeloTabla_cxc.addColumn("Nro");
        modeloTabla_cxc.addColumn("Fecha");
        modeloTabla_cxc.addColumn("Codigo");
        modeloTabla_cxc.addColumn("Descripcion");
        modeloTabla_cxc.addColumn("Valor");
        modeloTabla_cxc.addColumn("Abono");
        modeloTabla_cxc.addColumn("Saldo");
        modeloTabla_cxc.addColumn("Estado");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo_search_cliente = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        btn_search = new javax.swing.JButton();
        txt_search_cliente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        rb_search_nombres = new javax.swing.JRadioButton();
        rb_search_dni = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_clientes_add = new javax.swing.JTable();
        btn_modificar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        search_tabla_comensal = new javax.swing.JTextField();
        search_cbx = new javax.swing.JComboBox();

        setClosable(true);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ACCIONES", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 12), new java.awt.Color(0, 102, 255))); // NOI18N

        btn_search.setBackground(new java.awt.Color(102, 0, 102));
        btn_search.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        btn_search.setForeground(new java.awt.Color(255, 255, 255));
        btn_search.setText("Buscar Cliente");
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });

        txt_search_cliente.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/file.png"))); // NOI18N

        jLabel20.setFont(new java.awt.Font("Century Gothic", 1, 10)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(102, 0, 102));
        jLabel20.setText("Escriba la cedula o nombre a buscar del cliente");

        grupo_search_cliente.add(rb_search_nombres);
        rb_search_nombres.setFont(new java.awt.Font("Century Gothic", 1, 10)); // NOI18N
        rb_search_nombres.setSelected(true);
        rb_search_nombres.setText("Nombre y Apellido");

        grupo_search_cliente.add(rb_search_dni);
        rb_search_dni.setFont(new java.awt.Font("Century Gothic", 1, 10)); // NOI18N
        rb_search_dni.setText("Cedula/RUC/Pass");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_search_cliente)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rb_search_nombres)
                .addGap(18, 18, 18)
                .addComponent(rb_search_dni)
                .addGap(28, 28, 28)
                .addComponent(btn_search)
                .addGap(59, 59, 59))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_search_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rb_search_dni)
                            .addComponent(rb_search_nombres)
                            .addComponent(btn_search)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "RESULTADOS DE BUSQUEDA", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 12), new java.awt.Color(0, 102, 255))); // NOI18N

        tabla_clientes_add.setFont(new java.awt.Font("Century Gothic", 0, 10)); // NOI18N
        tabla_clientes_add.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ES_PASAPORTE", "CEDULA/RUC/PASS", "NOMBRES", "APELLIDOS", "RAZON SOCIAL", "DIRECCION", "TELEFONOS", "ESTADO"
            }
        ));
        jScrollPane1.setViewportView(tabla_clientes_add);

        btn_modificar.setBackground(new java.awt.Color(102, 102, 0));
        btn_modificar.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        btn_modificar.setForeground(new java.awt.Color(255, 255, 255));
        btn_modificar.setText("Agregar Cliente");
        btn_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jLabel10.setText("Filtrar Busquedas");

        search_tabla_comensal.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        search_tabla_comensal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                search_tabla_comensalKeyTyped(evt);
            }
        });

        search_cbx.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        search_cbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nombres", "Apellidos", "CÃ¨dula" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(search_cbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(search_tabla_comensal))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_modificar)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(search_cbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(search_tabla_comensal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_modificar))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void search_tabla_comensalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_tabla_comensalKeyTyped
        search_tabla_comensal.addKeyListener(new KeyAdapter() {
            public void keyReleased(final KeyEvent e) {
                String cadena = (search_tabla_comensal.getText());
                search_tabla_comensal.setText(cadena);
                repaint();
                filtro_search();
            }
        });
        trsFiltro = new TableRowSorter(tabla_clientes_add.getModel());
        tabla_clientes_add.setRowSorter(trsFiltro);

    }//GEN-LAST:event_search_tabla_comensalKeyTyped

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        btn_modificar.setEnabled(true);
        Connection c = con.conexion();
        while (modeloTabla.getRowCount() > 0) {
            modeloTabla.removeRow(0);
        }

        try {
            rb_search_nombres.setActionCommand("0");
            rb_search_dni.setActionCommand("1");
            String search_cliente = grupo_search_cliente.getSelection().getActionCommand();
            String searchName = txt_search_cliente.getText();
            PreparedStatement pss = null;
            if (search_cliente.equals("0")) {
                pss = c.prepareStatement("SELECT *\n"
                        + "FROM billing_cliente \n"
                        + "WHERE LOWER(CONCAT(apellidos, nombres))LIKE '%" + searchName + "%' \n"
                        + "OR UPPER(CONCAT(apellidos, nombres))LIKE '%" + searchName + "%'");
            }
            if (search_cliente.equals("1")) {
                pss = c.prepareStatement("SELECT *\n"
                        + "FROM billing_cliente \n"
                        + "WHERE PersonaComercio_cedulaRuc =" + searchName);

            }

            ResultSet rss = pss.executeQuery();
            while (rss.next()) {
                String act_desc = rss.getString("estaActivo");
                String txt_search = null;
                if (act_desc.equals("1")) {
                    txt_search = "Activo";
                }
                if (act_desc.equals("0")) {
                    txt_search = "Inactivo";
                }
                modeloTabla.addRow(new Object[]{
                    rss.getString("PersonaComercio_cedulaRuc"),
                    rss.getString("nombres"),
                    rss.getString("apellidos"),
                    rss.getString("celular"),
                    rss.getString("telefonos"),
                    rss.getString("email"),
                    rss.getString("direccion"),
                    rss.getString("id_nro_poste"),
                    rss.getString("telefono2"),
                    rss.getString("direccion2"),
                    txt_search

                });
            }

            this.tabla_clientes_add.setModel(modeloTabla);

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        } finally {
            con.desconectar();
        }
    }//GEN-LAST:event_btn_searchActionPerformed

    private void btn_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarActionPerformed
        int filaEditar = tabla_clientes_add.getSelectedRow();
        int numfilas = tabla_clientes_add.getSelectedRowCount();
        if (filaEditar >= 0 && numfilas == 1) {
            String cedula_selec = String.valueOf(tabla_clientes_add.getValueAt(filaEditar, 0));
            String name = String.valueOf(tabla_clientes_add.getValueAt(filaEditar, 1));
            String apelido = String.valueOf(tabla_clientes_add.getValueAt(filaEditar, 2));
            String celular = String.valueOf(tabla_clientes_add.getValueAt(filaEditar, 3));
            String tel_casa = String.valueOf(tabla_clientes_add.getValueAt(filaEditar, 4));
            String correo = String.valueOf(tabla_clientes_add.getValueAt(filaEditar, 5));
            String dir_casa = String.valueOf(tabla_clientes_add.getValueAt(filaEditar, 6));
            String nro_casa = String.valueOf(tabla_clientes_add.getValueAt(filaEditar, 7));
            String fono_trabajo = String.valueOf(tabla_clientes_add.getValueAt(filaEditar, 8));
            String dire_trabajo = String.valueOf(tabla_clientes_add.getValueAt(filaEditar, 9));

            String data_clien = cedula_selec + "/" + name + " " + apelido;
            cliente_id_hidden_ac.setText(cedula_selec);
            txt_names_ac.setText(data_clien);
            txt_celular_ac.setText(celular);
            txt_fono_casa_ac.setText(tel_casa);
            txt_fono_trabajo_ac.setText(fono_trabajo);
            txt_dirc_casa_ac.setText(dir_casa + "/" + nro_casa);
            txt_direc_trabajo_ac.setText(dire_trabajo);
            txt_email_ac.setText(correo);
            this.dispose();
            System.out.println("nam" + data_clien);
            btn_search2.setEnabled(true);
            jDateChooser1_ac.setEnabled(true);

            try {
                Connection c = con.conexion();

                PreparedStatement ps_acc = c.prepareStatement("SELECT ac.*\n"
                        + "FROM bill_funda_acumulativo ac\n"
                        //+ "WHERE ac.estado_funda = 1\n"
                        + "ORDER BY num_funda DESC LIMIT 1");
                ResultSet rs_acc = ps_acc.executeQuery();
                int id_funda_n = 0;
                while (rs_acc.next()) {
                    id_funda_n = rs_acc.getInt("num_funda");
                }

                if (id_funda_n == 0) {
                    txt_nro_funda.setText("1");
                } else {
                    PreparedStatement ps_ac = c.prepareStatement("SELECT ac.*\n"
                            + "FROM bill_funda_acumulativo ac\n"
                            + "WHERE ac.estado_funda = 1 AND ac.cliente_dni=? \n"
                            + "ORDER BY num_funda DESC LIMIT 1");
                    ps_ac.setString(1, cedula_selec);
                    ResultSet rs_ac = ps_ac.executeQuery();
                    int id_funda = 0;
                    while (rs_ac.next()) {
                        id_funda = rs_ac.getInt("num_funda");
                    }
                    int new_fun = 0;
                    if (id_funda == 0) {
                        new_fun = id_funda_n + 1;
                        txt_nro_funda.setText(String.valueOf(new_fun));
                    } else {
                        txt_nro_funda.setText(String.valueOf(id_funda));
                        //id_funda_n
                    }
                }

                /*BUSCA EL CLIENTE SI TIENE PLAN ACUMULATIVO*/
                PreparedStatement ps = c.prepareStatement("SELECT cc.*\n"
                        + "FROM bill_cxc_ac cc\n"
                        + "WHERE cc.estado = 1  AND cc.saldo_client =0 AND cc.client_id =" + cedula_selec + "\n"
                        + "ORDER BY id DESC LIMIT 1");
                ResultSet rs = ps.executeQuery();
                int id_ultimo = 0;
                while (rs.next()) {
                    id_ultimo = rs.getInt("id");

                }
                System.out.println("---->1111" + id_ultimo);
                PreparedStatement psos = c.prepareStatement("SELECT cc.*, p.nombreUnico, p.codigo2\n"
                        + "FROM bill_cxc_ac cc\n"
                        + "LEFT JOIN billing_producto p ON p.codigo = cc.doc_id\n"
                        + "WHERE  cc.estado = 1 AND cc.client_id = ?\n"
                        + "AND cc.id > ?");

                psos.setString(1, cedula_selec);
                psos.setInt(2, id_ultimo);
                ResultSet rsos = psos.executeQuery();

                String est = null;
                int info_ac = 0;
                cxc_id_hidden_ac.setText("0");
                btn_abonar.setEnabled(false);
                txt_abono.setEnabled(false);
                while (rsos.next()) {
                    cxc_id_hidden_ac.setText("1");
                    info_ac = rsos.getInt("id");

                    Double saldo_estado = rsos.getDouble("saldo_client");
                    if (saldo_estado == 0) {
                        est = "CANCELADO";

                    } else {
                        est = "ADEUDA";

                    }
                    modeloTabla_cxc.addRow(new Object[]{
                        rsos.getString("id"),
                        rsos.getString("fecha_cobro"),
                        rsos.getString("codigo2"),
                        rsos.getString("nombreUnico"),
                        rsos.getString("total_neto"),
                        rsos.getString("cuota_neto"),
                        rsos.getString("saldo_client"),
                        est,});

                }

                if (info_ac == 0) {

                    DefaultTableModel temp;

                    try {
                        temp = (DefaultTableModel) tablecxc_ac.getModel();
                        while (temp.getRowCount() > 0) {
                            temp.removeRow(0);
                        }

                        /*int a = temp.getRowCount() - 1;
                        for (int i = 0; i < a; i++) {
                            temp.removeRow(0); //aquÃ­ estaba el error, antes pasaba la i como parametro.... soy un bacÃ­n  XD
                        }*/
                    } catch (Exception e) {
                        System.out.println(e);
                    }

                    cxc_id_hidden_ac.setText("0");
                    btn_abonar.setEnabled(false);
                    txt_abono.setEnabled(false);

                    JOptionPane.showMessageDialog(null, "EL CLIENTE NO CUENTA CON PLAN ACUMULATIVO VIGENTE");
                } else {
                    txt_abono.setEnabled(true);
                    btn_modificar_reg.setEnabled(true);
                    btn_anular_pago.setEnabled(true);
                    btn_abonar.setEnabled(true);
                    tablecxc_ac.setModel(modeloTabla_cxc);
                }

            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            } finally {
                con.desconectar();
            }
        } else {
            JOptionPane.showMessageDialog(null, "DEBE DE SELECCIONAR AL MENOS UN DATO PARA EDITAR");
        }
    }//GEN-LAST:event_btn_modificarActionPerformed
    public void filtro_search() {

        int columnaAbuscar = 0;
        if (search_cbx.getSelectedItem() == "Nombres") {
            columnaAbuscar = 2;
        }
        if (search_cbx.getSelectedItem() == "Apellidos") {
            columnaAbuscar = 3;
        }

        if (search_cbx.getSelectedItem() == "CÃ¨dula") {
            columnaAbuscar = 1;
        }
        trsFiltro.setRowFilter(RowFilter.regexFilter("(?i)" + search_tabla_comensal.getText(), columnaAbuscar));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btn_modificar;
    public javax.swing.JButton btn_search;
    private javax.swing.ButtonGroup grupo_search_cliente;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JRadioButton rb_search_dni;
    public javax.swing.JRadioButton rb_search_nombres;
    private javax.swing.JComboBox search_cbx;
    private javax.swing.JTextField search_tabla_comensal;
    public javax.swing.JTable tabla_clientes_add;
    public javax.swing.JTextField txt_search_cliente;
    // End of variables declaration//GEN-END:variables
}
